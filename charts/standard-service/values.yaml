global:
  ingress:
    # domain: mydomain.com
    enabled: false
    tls:
      enabled: false

connect:
  hasura:
    enabled: false
    envName:
      endpoint: HASURA_ENDPOINT
      secret: HASURA_GRAPHQL_ADMIN_SECRET
    configMap: '{{ .Release.Name }}-hasura'
    secret: '{{ .Release.Name }}-hasura'
  minio:
    enabled: false
    envName:
      endpoint: S3_ENDPOINT
      bucket: S3_BUCKET
      key: S3_ACCESS_KEY_ID
      secret: S3_SECRET_ACCESS_KEY
      ssl: S3_SSL_ENABLED
    configMap: '{{ .Release.Name }}-minio'
    secret: '{{ .Release.Name }}-minio'
  rabbitmq:
    enabled: false
    envName:
      host: RABBITMQ_HOST
      user: RABBITMQ_DEFAULT_USER
      password: RABBITMQ_DEFAULT_PASS
    host: '{{ .Release.Name }}-rabbitmq'
    configMap: '{{ .Release.Name }}-rabbitmq'
    secret: '{{ .Release.Name }}-rabbitmq'

configFile:
  enabled: false
  name: config.json
  path: /usr/share/nginx/html
  values: {}

replicaCount: 1

imageConfig:
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

extraEnv: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

targetPort: 80

service:
  type: ClusterIP
  port: 3000

## Ingress for load balancer
ingress:
  enabled: false
  className: nginx
  # subdomain: www # in conjuction with .Values.global.ingress.domain
  tls:
    enabled: false
  # hosts:
  #   - name: my-service.domain1.com
  annotations: {}

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
